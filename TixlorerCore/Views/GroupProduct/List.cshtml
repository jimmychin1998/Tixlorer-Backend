@model IEnumerable<TixlorerCore.Models.Product>


@{
    ViewData["Title"] = "Products";
}
<style>
    .center-container {
        display: grid;
        place-items: center;
    }

    .page-item.active .page-link {
        color: #fff; /* 將文字顏色設為白色 */
        background-color: #007bff;
        border-color: #007bff;
    }

    .fixed-bottom-pagination {
        position: fixed;
        bottom: 10%;
        width: 100%;
    }
</style>




<div class="text-center">
    <h1 class="mt-5 mb-5">套票商品資料一覽表</h1>



    @using (Html.BeginForm("List", "Product", FormMethod.Get))
    {
        <div class="mb-5">
            @*查詢 @Html.DropDownList("selectItem") 類票券商品*@
            @Html.DropDownList("selectItem", (IEnumerable<SelectListItem>)ViewBag.selectItem, new { @value = ViewData["SelectedSelectItem"] })
            關鍵字： @Html.TextBox("txtKeyword", (IEnumerable<SelectListItem>)ViewBag.txtKeyword, new { placeholder = "搜尋"})  <input type="submit" value="查詢" />

            @*@Html.Hidden("page", 1)*@

            @*                <p>測試是否抓到:</p>
        <p>ViewBag.SelectedSelectItem :@ViewBag.SelectedSelectItem</p>
        <p>ViewBag.TotalPages: @ViewBag.TotalPages</p>
        <p>Current page: @ViewBag.CurrentPage</p>*@
        </div>
    }
</div>

<div class="table-wrapper mx-3">
    <table class="table table-striped table-hover table-bordered">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.TicketId)
                </th>
                @*<th>
                @Html.DisplayNameFor(model => model.GroupId)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DiscountPrice)
                </th>
                @* <th>
                @Html.DisplayNameFor(model => model.Desc)
                </th>
                @*<th>
                @Html.DisplayNameFor(model => model.Image)
                </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.StockNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OnShelf)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.OffShelf)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.State)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @*<input type="checkbox" name="@item.Name" value="@item.PId" checked />*@
                        @Html.DisplayFor(modelItem => item.PId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TicketId)
                    </td>
                    @*        <td>
                @Html.DisplayFor(modelItem => item.GroupId)
                </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DiscountPrice)
                    </td>
                    @*           <td>
                @Html.DisplayFor(modelItem => item.Desc)
                </td>
                <td>
                @Html.DisplayFor(modelItem => item.Image)
                </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.StockNumber)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OnShelf)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.OffShelf)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.State)
                    </td>
                    <td>
                        @Html.ActionLink("修改", "Edit", "Product", new { id = item.PId },
                    new { @class = "btn btn-success" })
                        @Html.ActionLink("刪除", "Delete", "Product", new { id = item.PId },
                    new { onclick = "return confirm('是否刪除該筆資料?')", Class = "btn btn-danger" })
                    </td>
                </tr>
            }

        </tbody>
    </table>
</div>

@*分頁元件*@
<div class="d-flex justify-content-center align-items-center fixed-bottom-pagination" style="height: 50px;  ">
    <nav aria-label="Page navigation example">
        <ul class="pagination">
            @*上一頁*@

            @if (ViewBag.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("List", "Product", new { page = ViewBag.CurrentPage-1 , selectItem = ViewBag.SelectedSelectItem, txtKeyword = ViewBag.txtKeyword})" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }
            else
            {           //若為第一頁則跳出alert
                <li class="page-item">
                    <a class="page-link" href="javascript:void(0)" onclick="alert('已是第一頁');" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
            }

            @for (int i = 1; i <= ViewBag.TotalPages; i++)
            {
                <li class="page-item @(ViewBag.CurrentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("List", "Product", new { page = i, selectItem = ViewBag.SelectedSelectItem,txtKeyword = ViewBag.txtKeyword })">@i </a>
                </li>
            }

            @*下一頁*@

            @if (ViewBag.CurrentPage < ViewBag.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("List", "Product", new { page = ViewBag.CurrentPage+1, selectItem = ViewBag.SelectedSelectItem, txtKeyword = ViewBag.txtKeyword })" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }
            else
            {           //若為最後一頁則跳出alert
                <li class="page-item">
                    <a class="page-link" href="javascript:void(0)" onclick="alert('已到最後一頁');" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            }

        </ul>
    </nav>
</div>

<div class="center-container" style="position: fixed; bottom: 120px; left: 90%; ">
    <a asp-action="Create" class="btn btn-outline-primary">新增商品</a>
</div>

<script>

</script>